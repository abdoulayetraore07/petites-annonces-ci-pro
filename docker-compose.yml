version: '3.8'

networks:
  petites_annonces_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

services:
  postgres:
    image: postgres:15-alpine
    container_name: petites_annonces_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: petites_annonces_ci
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password_change_in_prod}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - petites_annonces_network

  redis:
    image: redis:7-alpine
    container_name: petites_annonces_redis
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dev_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - petites_annonces_network
    command: redis-server --requirepass ${REDIS_PASSWORD:-dev_redis_password}

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: petites_annonces_backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://admin:${POSTGRES_PASSWORD:-dev_password_change_in_prod}@postgres:5432/petites_annonces_ci
      REDIS_URL: redis://:${REDIS_PASSWORD:-dev_redis_password}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-super_secret_jwt_key_change_in_prod}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5000:5000"
    networks:
      - petites_annonces_network
    depends_on:
      - postgres
      - redis

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: petites_annonces_frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5000}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - petites_annonces_network
    depends_on:
      - backend

  adminer:
    image: adminer:4.8.1
    container_name: petites_annonces_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - petites_annonces_network
    depends_on:
      - postgres